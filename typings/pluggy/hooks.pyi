from typing import Any, Optional

class HookspecMarker:
    project_name: Any = ...
    def __init__(self, project_name: Any) -> None: ...
    def __call__(
        self,
        function: Optional[Any] = ...,
        firstresult: bool = ...,
        historic: bool = ...,
        warn_on_impl: Optional[Any] = ...,
    ) -> Any: ...

class HookimplMarker:
    project_name: Any = ...
    def __init__(self, project_name: Any) -> None: ...
    def __call__(
        self,
        function: Optional[Any] = ...,
        hookwrapper: bool = ...,
        optionalhook: bool = ...,
        tryfirst: bool = ...,
        trylast: bool = ...,
    ) -> Any: ...

def normalize_hookimpl_opts(opts: Any) -> None: ...
def varnames(func: Any) -> Any: ...

class HookImpl:
    function: Any = ...
    plugin: Any = ...
    opts: Any = ...
    plugin_name: Any = ...
    def __init__(
        self, plugin: Any, plugin_name: Any, function: Any, hook_impl_opts: Any
    ) -> None: ...

class HookSpec:
    namespace: Any = ...
    function: Any = ...
    name: Any = ...
    opts: Any = ...
    argnames: Any = ...
    warn_on_impl: Any = ...
    def __init__(self, namespace: Any, name: Any, opts: Any) -> None: ...
